# EEPROM-Programmer
EEPROM Programmer built with the GPIO Device framework for the BeagleBone Black. 

--ABOUT

The hardware being used is a AT28C16 (http://cva.stanford.edu/classes/cs99s/datasheets/at28c16.pdf) and uses a serial loading
framework to load values into the 11-bit address and the 8-bit data. The GPIO and Prog classes created can be customized to 
accommodate any EEPROM that uses serial-loading. Specifically, any hardware that takes a clock, clear, and data pin is supported
by this program.

This program uses the BBB GPIO Device framework and uses 7 pins in total.
  - 3 GPIO pins for the Data clear, clock, and data pins.
  - 3 GPIO pins for the Address clear, clock, and data pins.
  - 1 GPIO pin for the Write pin which locks the Data in the bit Pattern dictated by the address

The pins that are to be used can be input in the driver.cpp when constructing the Prog objects. A data Prog object and a address
Prog object, GPIO write pin must also be specified.
If there are not enough available GPIO pins on the BBB, an tutorial on how to free up more pins is included below in the README 
  
--COMPILING and RUNNING

Typing make will compile the program into an executable called "drive"

An example is as follows:

$ make

A datafile must be passed as an arguement that has the address values and the data files that are to be programmed.
Every line of the datafile must include an 11-bit hexadecimal address, followed by a space, and then followed by an 8 bit
hexadecimal data value.
An example of these files can be found in the Example_Files directory.

running with the executable compiled:

$ ./drive [datafile.txt]

--FREEING UP GPIO PINS THROUGH THE DEVICE-OVERLAYS

      ***CAUTION YOUR BBB MIGHT NOT BOOT IF YOU DISABLE THE WRONG THINGS***
      
Available GPIO pins must be input for the program to use. If they are not enough you must free them up through the disabling
of device-overlays. 
To do this first access the file uEnv.txt. It is located in /boot/ directory. 
In this file you will see a line like this:

##BeagleBone Black: HDMI (Audio/Video) disabled:

##10 dtb=am335x-boneblack-emmc-overlay.dtb

Uncomment the second line here. Make sure that only this line is ucommented. If a different device-overlay is disabled
Uncommenting this device-overlay will free up pins used by the HDMI. If you uncomment this line you will not be able to use
HDMI capabilities.

If you uncomment the device-overlay that disabled the onbared eMMC memory, you device will not boot and will have to be boot
from an SSD.


-- CONTACT
Any question or comments can be directed to lukekryger98@gmail.com
